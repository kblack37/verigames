package cgs.server.utils;

import haxe.Constraints.Function;
import cgs.server.logging.requests.RequestDependency;

interface INtpTime
{
    
    /**
     * Indicates if the time has been set from a call to time server.
     */
    var isTimeValid(get, never) : Bool;    
    
    /**
     * Get an Ntp timestamp. This will return a local timestamp, via getTimer(),
     * if the time is not valid. If this occurs getOffsetClientTimeStamp
     * will need to be called once the server time has been set.
     */
    var clientTimeStamp(get, never) : Float;    
    
    var timeRequestDependency(get, never) : RequestDependency;

    
    /**
     * Get Ntp timestamp that is offset by the given local time.
     * This time value should be generated by calling getTimer().
     */
    function getOffsetClientTimeStamp(localTime : Float) : Float
    ;
    
    /**
     * Add a callback that will be called when time has been returned from server.
     * Will be called immediately if the time is already valid.
     */
    function addTimeValidCallback(callback : Function) : Void
    ;
}
