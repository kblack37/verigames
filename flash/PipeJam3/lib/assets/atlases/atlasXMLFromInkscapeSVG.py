import sys
import xml.dom.minidom

def atlasXMLFromInkscapeSVG(svgfile):
    print svgfile

    if not svgfile.endswith('.svg'):
        raise RuntimeError('File ' + svgfile + ' has wrong extension.');

    dom = xml.dom.minidom.parse(svgfile)

    imagefilename = svgfile[:-4] + '.png'
    xmlfile = open(svgfile[:-4] + '.xml', 'w');

    xmlfile.write('<?xml version="1.0" encoding="UTF-8"?>\n')
    xmlfile.write('\n')
    xmlfile.write('<!-- NOTE: this file was generated by atlasXMLFromInkscapeSVG.py -->\n')
    xmlfile.write('\n')
    xmlfile.write('<TextureAtlas imagePath="%s">\n' % imagefilename)

    subtex = {}
    subtex_frame = {}

    for g in dom.getElementsByTagName('g'):
        if g.getAttribute('inkscape:label') == 'Guide':
            for rect in g.getElementsByTagName('rect'):
                name = rect.getAttribute('id')
                x = int(round(float(rect.getAttribute('x'))))
                y = int(round(float(rect.getAttribute('y'))))
                w = int(round(float(rect.getAttribute('width'))))
                h = int(round(float(rect.getAttribute('height'))))

                if name.endswith('_FRAME'):
                    subtex_frame[name[:-6]] = (x, y, w, h)
                else:
                    subtex[name] = (x, y, w, h)

    for name in sorted(subtex.iterkeys()):
        x, y, w, h = subtex[name]

        if subtex_frame.has_key(name):
            fx, fy, fw, fh = subtex_frame[name]
            print '  ' + name + ' (FRAME)'
            xmlfile.write('\t<SubTexture name="%s" x="%d" y="%d" width="%d" height="%d" frameX="%d" frameY="%d" frameWidth="%d" frameHeight="%d" />\n' % (name, x, y, w, h, fx - x, fy - y, fw, fh))
        else:
            print '  ' + name
            xmlfile.write('\t<SubTexture name="%s" x="%d" y="%d" width="%d" height="%d" />\n' % (name, x, y, w, h))

    xmlfile.write('</TextureAtlas>\n')
    
if __name__ == '__main__':
    for svgfile in sys.argv[1:]:
        atlasXMLFromInkscapeSVG(svgfile)
